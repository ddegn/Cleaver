CON{{ ****** Public Notes ******

  

}}
CON{
  ****** Duane's Working Notes ******

  Rename from "HeaderEddieAbHb25Encoders141231a" to "HeaderCleaver141231a".
}  
CON '' Master Pin Assignments

  MASTER_TO_SLAVE_TX = 6
  MASTER_FROM_SLAVE_RX = 7
  ' Encoders
  ENCODERS_PIN = 14

  ENABLE_0 = 12
  ENABLE_1 = 13
 
  ' ADC (Activity Board)
  ADC_CS = 21                                        
  ADC_SCL = 20 
  ADC_DO = 19 
  ADC_DI = 18

  MASTER_USB_BAUD = 115_200                                   
  
CON '' Shared Pin Assignments and Other Shared Constants

    ' PC COMMUNICATION
  USB_TX = 30 
  USB_RX = 31

  ' Serial Port Settings
  BAUDMODE = %0000
  PROP_TO_PROP_BAUD = 9_600 '115_200                                 
 
  
CON '' Slave Pin Assignments

  PING_0 = 0                                          
  PING_1 = 1                                           

  FIRST_SERVO_PIN = 2

  SLAVE_TO_MASTER_TX = 8
  SLAVE_FROM_MASTER_RX = 9
  
  EMIC_RX = 13
  EMIC_TX = 12
  EASY_VR_RX = 15
  EASY_VR_TX = 14
  'XBEE_RX =
  'XBEE_TX =
  SR02_RX = 11
  SR02_TX = 10
  
  'SR02_TRIGGER_PIN = 10
  SEVEN_SEGMENT_DATA = 16
  SEVEN_SEGMENT_LATCH = 17
  SEVEN_SEGMENT_CLOCK = 18

  RED_LASER_TOP = 20
  RED_LASER_BOTTOM = 21
  
  WII_CLOCK_SLAVE = 28
  WII_DATA_SLAVE = 29
  
  SLAVE_USB_BAUD = 19200 '9_600 '115_200                                   
  EASY_VR_BAUD = 9_600
  EMIC_BAUD = 9_600
  SR02_BAUD = 9_600

  INITIAL_PING = |< PING_0 | |< PING_1                

  CALIBRATION_VERSION_EEPROM = $8000
 
  #0, NO_LED, START_CAL_LED 

  SEVEN_SEGMENTS_IN_USE = 3

  DEFAULT_7_SEGMENT_BRIGHTNESS = 2
  
CON 
 
  '' distance travelled per encoder tick = 2,455mm / 720 = 3.410mm
  '' bot radius = 59.88 ticks 
  MICROMETERS_PER_TICK = 3410                           '' User changable
  POSITIONS_PER_ROTATION = 748 ' 744                    '' User changable
  ' "POSITIONS_PER_ROTATION" is the distance one wheel needs to travel to rotate the
  ' robot a full revolution while one wheel remains stationary.
  
  ' Motor names
  #0
  LEFT_MOTOR
  RIGHT_MOTOR

 
  ' Ping))) sensors
  PINGS_IN_USE = 2  
  SERVOS_IN_USE = 6
  MAX_SERVO_INDEX = SERVOS_IN_USE - 1
  
  MAX_POWER = 7520

  SCALED_POWER = MAX_POWER / 500
 
  STOP_PULSE = 1_500

  TOO_SMALL_TO_FIX = 0                                  
  DEFAULT_INTEGRAL_NUMERATOR = 200                    
  DEFAULT_INTEGRAL_DENOMINATOR = 100                  

  TAU = 2.0 * pi
  TAU_OVER_4 = pi / 2.0
  US_PER_TAU = 4000
  US_PER_QUARTER_TAU = US_PER_TAU / 4
  F_US_PER_RADIAN = float(US_PER_TAU) / TAU
  F_RADIAN_PER_US = TAU / float(US_PER_TAU) 

  F_LASER_HEIGHT = 320.0 ' in millimeters

  INVALID_LASER_READING = -999
  
CON '' Emic Codes

  #0, INTRO_EMIC, GOOD_COM_EMIC, BAD_COM_EMIC, SPEED_EMIC, FIGURE_8_EMIC', _EMIC, _EMIC, _EMIC, _EMIC
    
CON '' Nunchuck Constants

  VALID_NUNCHUCK_ID = $04C4B400
  
  CENTER_STICK_NUNCHUCK_X = 129
  CENTER_STICK_NUNCHUCK_Y = 127
  DEADZONE_NUNCHUCK_STICK = 8
  CENTER_NUNCHUCK_X_MIN = CENTER_STICK_NUNCHUCK_X - DEADZONE_NUNCHUCK_STICK
  CENTER_NUNCHUCK_X_MAX = CENTER_STICK_NUNCHUCK_X + DEADZONE_NUNCHUCK_STICK
  CENTER_NUNCHUCK_Y_MIN = CENTER_STICK_NUNCHUCK_Y - DEADZONE_NUNCHUCK_STICK
  CENTER_NUNCHUCK_Y_MAX = CENTER_STICK_NUNCHUCK_Y + DEADZONE_NUNCHUCK_STICK
  NUNCHUCK_X_RANGE_RIGHT = 255 - CENTER_NUNCHUCK_X_MAX + 1
  NUNCHUCK_X_RANGE_LEFT = CENTER_NUNCHUCK_X_MIN + 1
  NUNCHUCK_Y_RANGE_FORWARD = 255 - CENTER_NUNCHUCK_Y_MAX + 1
  NUNCHUCK_Y_RANGE_REVERSE = CENTER_NUNCHUCK_Y_MIN + 1
  NUNCHUCK_X_RANGE_R_HALF = NUNCHUCK_X_RANGE_RIGHT / 2
  NUNCHUCK_X_RANGE_L_HALF = NUNCHUCK_X_RANGE_LEFT / 2
  NUNCHUCK_Y_RANGE_F_HALF = NUNCHUCK_Y_RANGE_FORWARD / 2
  NUNCHUCK_Y_RANGE_R_HALF = NUNCHUCK_Y_RANGE_REVERSE / 2
  
  NUNCHUCK_ACC_MIN_X = 259 'port side down
  NUNCHUCK_ACC_MAX_X = 752 'starboard side down
  NUNCHUCK_ACC_MID_X = (NUNCHUCK_ACC_MIN_X + NUNCHUCK_ACC_MAX_X) / 2 'top side up
  NUNCHUCK_ACC_MIN_Y = 275 'front up
  NUNCHUCK_ACC_MAX_Y = 763 'front down
  NUNCHUCK_ACC_MID_Y = (NUNCHUCK_ACC_MIN_X + NUNCHUCK_ACC_MAX_X) / 2 'top side up
  NUNCHUCK_ACC_MIN_Z = 256 'top side down
  NUNCHUCK_ACC_MAX_Z = 735 'top side up
  NUNCHUCK_ACC_MID_Z = (NUNCHUCK_ACC_MIN_Z + NUNCHUCK_ACC_MAX_Z) / 2 'top side pointing horizontal
  NUNCHUCK_ACC_RANGE_Z = NUNCHUCK_ACC_MID_Z + NUNCHUCK_ACC_MIN_Z
  NUNCHUCK_ACC_RANGE_Y = NUNCHUCK_ACC_MID_Y + NUNCHUCK_ACC_MIN_Y
  NUNCHUCK_ACC_RANGE_X = NUNCHUCK_ACC_MID_X + NUNCHUCK_ACC_MIN_X
  DEADZONE_NUNCHUCK_ACC_Z = NUNCHUCK_ACC_RANGE_Z / 16
  NUNCHUCK_VERTICAL_MIN_Z = NUNCHUCK_ACC_MID_Z - DEADZONE_NUNCHUCK_ACC_Z
  NUNCHUCK_VERTICAL_MAX_Z = NUNCHUCK_ACC_MID_Z + DEADZONE_NUNCHUCK_ACC_Z
  DEADZONE_NUNCHUCK_ACC_Y = NUNCHUCK_ACC_RANGE_Y / 16
  NUNCHUCK_VERTICAL_MIN_Y = NUNCHUCK_ACC_MID_Y - DEADZONE_NUNCHUCK_ACC_Y
  NUNCHUCK_VERTICAL_MAX_Y = NUNCHUCK_ACC_MID_Y + DEADZONE_NUNCHUCK_ACC_Y
  DEADZONE_NUNCHUCK_ACC_X = NUNCHUCK_ACC_RANGE_X / 16
  NUNCHUCK_VERTICAL_MIN_X = NUNCHUCK_ACC_MID_X - DEADZONE_NUNCHUCK_ACC_X
  NUNCHUCK_VERTICAL_MAX_X = NUNCHUCK_ACC_MID_X + DEADZONE_NUNCHUCK_ACC_X
  NUNCHUCK_UP_THRESHOLD = NUNCHUCK_ACC_MIN_Y + (NUNCHUCK_ACC_RANGE_Y / 10)
  NUNCHUCK_DOWN_THRESHOLD = NUNCHUCK_ACC_MAX_Y - (NUNCHUCK_ACC_RANGE_Y / 10)  

  MAX_STICK_NUNCHUCK = $FF
  MAX_ACC_NUNCHUCK = 1_023

  ABS_MAX_HEIGHT = NUNCHUCK_ACC_RANGE_Y
  F_ABS_MAX_HEIGHT = float(ABS_MAX_HEIGHT)

  #0, NUNCHUCK_BUTTON_NONE, NUNCHUCK_BUTTON_Z, NUNCHUCK_BUTTON_C, NUNCHUCK_BUTTON_BOTH 

  #0, X_ACCEL, Y_ACCEL, Z_ACCEL

OBJ

  '' The analog to digital converter object does not start a new cog.
  '' The ADC object is required to use the "ADC" command
  Motors : "Servo32v9Shared"
   
PUB StartMotors

  Motors.Start

PUB SetMotorPower(side, power)

  Motors.Set(enablePin[side], STOP_PULSE + (power / SCALED_POWER))

DAT

enablePin     long ENABLE_0, ENABLE_1